<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <link rel="apple-touch-icon" sizes="76x76" href="../assets/img/123.png">
  <link rel="icon" type="image/png" href="../assets/img/123.png">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <title>
    Admin Dashboard 
  </title>
  <meta content='width=device-width, initial-scale=1.0, shrink-to-fit=no' name='viewport' />
  <!--icons-->
  <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons" />
  <!-- CSS Files -->
  <link href="/css/material-dashboard.css?v=2.1.2" rel="stylesheet" />
  <link
  rel="stylesheet"
  type="text/css"
  href="login files/fonts/font-awesome-4.7.0/css/font-awesome.min.css"
/>
<!--erorr icons-->
<link
  rel="stylesheet"
  type="text/css"
  href="login files/fonts/Linearicons-Free-v1.0.0/icon-font.min.css"
/>
<link rel="stylesheet" type="text/css" href="login files/css/util.css" />
<!--sizing-->
<link rel="stylesheet" type="text/css" href="login files/css/main.css" />
  <style>
    body{
    /* background-color: rgb(20, 207, 20); */

    }
    .btn-edit{
    background-color: rgb(20, 207, 20);
    border-radius: 5px;
}
.btn-remove{
    background-color: rgb(236, 26, 26);
    border-radius: 5px;

}
  </style>
</head>

<body>
    <div class="sidebar" data-color="purple" data-background-color="white" data-image="../assets/img/sidebar-1.jpg">
      <div class="logo">
        <a href="tables.html" class="simple-text logo-normal"> Admin Dashboard </a>
      </div>
      <div class="sidebar-wrapper">
        <ul class="nav">
          <li class="active">
            <a class="nav-link" href="/table">
              <i class="material-icons">content_paste</i>
              <p>Table List</p>
            </a>
          </li>
         
          <li>
            <a class="nav-link" href="/notification" id="noti">
              <i class="material-icons">notifications</i>
              <p>Notifications</p>
            </a>
          </li>
          <li>
            <a class="nav-link" href="/sendCode">
              <i class="material-icons">bubble_chart</i>
              <p>Send Code</p>
            </a>
          </li>
        </ul>
      </div>
    </div>
    <div class="main-panel">
      <!-- Navbar -->
      <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid"> <!--icons side-->
          <div >
            <a class="navbar-brand" href="javascript:;">PROBLEMS TABLE</a>
          </div>
        
        </div>
      </nav>
      <!-- End Navbar -->
      <div class="content">
        <div class="container-fluid">
          <div class="row">
            <div class="col-md-12">
              <div class="card">
                <div class="card-header card-header-primary">
                  <h4 class="card-title ">CODES AND SOLUTIONS</h4>
                  <p class="card-category"> Here is code of problem and solution</p>
                </div>
                <div class="card-body">
                  <div class="table-responsive" >
                    <table class="table" id="table1">
                      <thead class=" text-primary">
                        <th>
                          Code
                        </th>
                        <th>
                          Problem
                        </th>
                        <th>
                          Solution File
                        </th>
                        <th>
                          Edit
                        </th>
                        <th>
                          Remove
                        </th>
                      </thead>
                      <tbody>
                         <tr id="data">

                        </tr>
                      </tbody>
                    </table>
                    <!-- <button style=" margin-left: 400px; background-color: blue; color: cornsilk; border-radius: 10px; padding: 5px;">Add Problem</button> -->
                    <div class="button-position m-t-32" id="table-form">
                      <button type="submit" class="button-design" onclick="redirectForm()">Add Problem</button>
                    </div>
                   
                  </div>
               
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
        </div>
      </footer>
    </div>
  
    <script >


var api = "http://localhost:7000/api/problem/";
    var table = document.getElementById("data");
    var table1 = document.getElementById("table1");
    var from = document.getElementById("table-form");
    var problems = [];
    var currentEditedProb = {}
    console.log(table1);
  
      function redirectForm(){
            window.location.href = "http://localhost:7000/addproblem";
       }
       function redirectTable(){
            window.location.href = "http://localhost:7000/table";
       }

      function saveProblem(rowNum ,dataId ){
        console.log("saved") ; 
        const row =  table1.children[1].children[rowNum] ; 

        //get values from DOM
        const problem = row.children[1].children[0].value;
        const file = currentEditedProb.file;
        //update problems 
        problems[rowNum-1] = {...problems[rowNum-1],problemFile:file , problem};
        
      
        
        //update database 
        modifyProblem(dataId , problem , file);
        //changeview 
      
        row.children[1].innerHTML = `<p>${problems[rowNum-1].problem}</p>`;
        row.children[2].innerHTML = `<a href='${problems[rowNum-1]?.problemFile?.originalname}'' >Download File</a>`
       
        row.children[3].innerHTML = `<button class="btn-edit" onclick="editing('${rowNum}','${problems[rowNum-1]._id}')">Edit</button>`

        row.children[4].innerHTML = `<button class="btn-remove" onclick="deleteProblem('${problems[rowNum-1]._id}','${rowNum-1}')">Delete</button>`

      }


      //cancelling editing

      function cancelProblem(RowNum){
        console.log("canceled");
        console.log(currentEditedProb ,table1.children[1].children[RowNum] )
       const row =  table1.children[1].children[RowNum] 
        row.children[1].innerHTML = `<p>${ problems[RowNum-1].problem}</p>`;
        row.children[2].innerHTML = `<a href=${problems[RowNum-1]?.problemFile?.originalname} download>Download File</a>`
       
        row.children[3].innerHTML = `<button class="btn-edit" onclick="editing('${RowNum}','${problems[RowNum-1]._id}')">Edit</button>`

        row.children[4].innerHTML = `<button class="btn-remove" onclick="deleteProblem('${problems[RowNum-1]._id}','${RowNum-1}')">Delete</button>`
        

      }
      function getFileInput(e){
  
    currentEditedProb.file = e.target.files[0]
      }
  
  function editing(rowNum, dataId){
   
     

    const row =  table1.children[1].children[rowNum] ; 
    row.children[1].innerHTML = `<input type="text"></input>`;
    row.children[2].innerHTML = `<input type='file' onchange="getFileInput(event)">Download File</a>`
  
    row.children[3].innerHTML = `<button class="btn-edit" onclick='saveProblem(${rowNum},"${dataId}")'>Done</button>`;
    
    row.children[4].innerHTML = `<button class="btn-remove" onclick='cancelProblem("${rowNum}")' >cancel</button>`

  }

      window.addEventListener('load', () => {
  


    initialize();

    function initialize() {
   
  fetch(api)
    .then(response => {
      // console.log(response);
      return response.json();
    })
    .then(data => {
      console.log("data",data)
      problems.push(...data);
      //    console.log(problems[1].problem);
      
      for (var i = 0; i < problems.length; i++) {
        var row = table1.insertRow(-1); // -1 to append at end of table
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);
        console.log();
        cell1.innerHTML = i+1;
        cell2.innerHTML = `<p>${ problems[i].problem}</p>`;

        const relativePath = problems[i]?.problemFile?.path ; 
        console.log(relativePath)
        const root = "http://localhost:7000/public"
        cell3.innerHTML = `<a href="${root}/${relativePath&&relativePath}"  >Download File</a>`
        //problems[i]?.problemFile?.filename;
        // cell4.innerHTML = `<button class="btn-edit" onclick="@location.href=http://localhost:7000/addProblem">Edit</button>`
        cell4.innerHTML = `<button class="btn-edit" onclick="editing('${i+1}','${problems[i]._id}')">Edit</button>`

        cell5.innerHTML = `<button class="btn-remove" onclick="deleteProblem('${problems[i]._id}','${i}')">Delete</button>`
      }
    });
}
    

});
    

    function addPrpoblem(){
      const raw={};
      fetch('http://localhost:7000/api/problem/', {
  body: raw,
  method: 'POST',
})
.then(res => res.json()) // or res.json()
.then(res => console.log(res))
.then(res=>{
  location.reload();
})
  .catch(error => console.log('error', error));


    }  

     function deleteProblem(id,i){
       console.log(id,i)
      fetch('http://localhost:7000/api/problem/' + id, {
  method: 'DELETE',
})
.then(res => res.json()) // or res.json()
.then(res => console.log(res))
.then(res=>{
  location.reload();
})
  .catch(error => console.log('error', error));

//       var raw = "";

// var requestOptions = {
//   method: 'DELETE',
//   body: raw,
//   redirect: 'follow'
// };

// fetch(`localhost:7000/api/problem/${id}`, requestOptions)
//   .then(response => response.text())
//   .then(result => console.log(result))
//   .catch(error => console.log('error', error));
     }
     function getoneproblem(id){
      

        fetch(`http://localhost:7000/api/problem/${id}`, {
  method: 'get',
}).then(response=>{

console.log(response)
          return response.json();

        }).then(data=>{
          document.getElementById("pEdit").value = data.problem;

          console.log(data)
        })
      }


      function modifyProblem(id , problem , FileInput){
      
        const formData = new FormData();
        formData.append('problem', problem);
        formData.append('file', FileInput);
        
  
       console.log("file", FileInput);
        var myHeaders = new Headers();
 

        var requestOptions = {
          method: "POST",
          headers: myHeaders,
          body: formData,
        };

        fetch(`http://localhost:7000/api/problem/${id}`, requestOptions)
          .then((response) => response.json())
          .then((result) => {
            console.log(result);
      
          })
          .catch((error) => {
            console.log("error", error);
          });

      }
      
      </script>
  <!--   Core JS Files   -->
  <script src="../assets/js/core/jquery.min.js"></script> <!-- the top icons -->
  <script src="../assets/js/core/popper.min.js"></script> 
  <script src="../assets/js/core/bootstrap-material-design.min.js"></script>
  <script src="../assets/js/plugins/perfect-scrollbar.jquery.min.js"></script> <!-- emotion icons-->
  <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="../assets/js/material-dashboard.js?v=2.1.2" type="text/javascript"></script>
</body>

</html>